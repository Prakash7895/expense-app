import { cryptPassword, prisma } from './utils';

const incomeList = ['Borrowed', 'Business', 'Loan', 'Rent', 'Salary'];
const expenseList = [
  'Bills',
  'Clothing',
  'Communications',
  'Drinks',
  'Eating Out',
  'Education',
  'Entertainment',
  'Food',
  'Fuel',
  'Fun',
  'Gifts',
  'Hospital',
  'Hotel',
  'Medical',
  'Merchandise',
  'Movie',
  'Other',
  'Personal',
  'Pets',
  'Rent',
  'Restaurant',
  'Shopping',
  'Sports',
  'Taxi',
  'Tips',
  'Toiletry',
  'Transport',
];

const dummyUser = {
  email: 'prakash_saran@yopmail.com',
  firstName: 'Prakash',
  lastName: 'Saran',
  currency: 'INR',
};

const transactions = [
  {
    amount: 12,
    balance: 4225,
    categoryId: 'Netflix Subscription',
    date: '2024-02-28 08:00:47+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 100,
    balance: 4702,
    categoryId: 'Hospital',
    date: '2024-02-18 07:56:24+00',
    description: 'Dental appointment',
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 23,
    balance: 4942,
    categoryId: 'Restaurant',
    date: '2024-02-13 07:53:13+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 25,
    balance: 5292,
    categoryId: 'Entertainment',
    date: '2024-02-09 07:50:41+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 8,
    balance: 5327,
    categoryId: 'Food',
    date: '2024-02-04 07:50:15+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 12,
    balance: 4930,
    categoryId: 'Food',
    date: '2024-02-14 07:54:18+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 57,
    balance: 4585,
    categoryId: 'Restaurant',
    date: '2024-02-22 07:59:01+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 34,
    balance: 4376,
    categoryId: 'Medical',
    date: '2024-02-28 08:07:34+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 87,
    balance: 5175,
    categoryId: 'Shopping',
    date: '2024-02-14 07:51:47+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 23,
    balance: 4321,
    categoryId: 'Education',
    date: '2024-02-15 08:09:48+00',
    description: 'books',
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 67,
    balance: 4863,
    categoryId: 'Clothing',
    date: '2024-02-17 07:54:33+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 5,
    balance: 4895,
    categoryId: 'Food',
    date: '2024-02-01 07:41:19+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 17,
    balance: 4359,
    categoryId: 'Movie',
    date: '2024-02-27 08:08:17+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 56,
    balance: 4265,
    categoryId: 'Shopping',
    date: '2024-02-21 08:10:29+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 25,
    balance: 4642,
    categoryId: 'Fuel',
    date: '2024-02-21 07:58:49+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 500,
    balance: 4500,
    categoryId: 'Rent',
    date: '2024-02-06 07:32:00+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 28,
    balance: 4237,
    categoryId: 'Food',
    date: '2024-02-29 08:10:55+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 30,
    balance: 5262,
    categoryId: 'Restaurant',
    date: '2024-02-12 07:51:07+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 23,
    balance: 4562,
    categoryId: 'Food',
    date: '2024-02-24 07:59:40.833+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 23,
    balance: 4667,
    categoryId: 'Movie',
    date: '2024-02-20 07:58:27+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 110,
    balance: 4710,
    categoryId: 'Borrowed',
    date: '2024-02-10 07:47:23+00',
    description: null,
    relatedUserId: 'user1',
    type: 'credit',
    userId: '',
  },
  {
    amount: 15,
    balance: 5320,
    categoryId: 'Food',
    date: '2024-02-08 07:49:43+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 25,
    balance: 4575,
    categoryId: 'Restaurant',
    date: '2024-02-06 07:42:08+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 17,
    balance: 4143,
    categoryId: 'Food',
    date: '2024-02-28 17:36:22+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 15,
    balance: 4344,
    categoryId: 'LinkedIn Premium',
    date: '2024-02-26 08:09:24+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 12,
    balance: 4690,
    categoryId: 'Food',
    date: '2024-02-19 07:57:38+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 120,
    balance: 5055,
    categoryId: 'Gifts',
    date: '2024-02-14 07:52:14+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 29,
    balance: 4673,
    categoryId: 'Communications',
    date: '2024-02-18 07:55:55+00',
    description: 'Mobile recharge',
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 400,
    balance: 5300,
    categoryId: 'Borrowed',
    date: '2024-02-04 07:34:14+00',
    description: 'borrowed from Raj',
    relatedUserId: null,
    type: 'credit',
    userId: '',
  },
  {
    amount: 90,
    balance: 4965,
    categoryId: 'Movie',
    date: '2024-02-15 07:52:48+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 12,
    balance: 4225,
    categoryId: 'Food',
    date: '2024-02-27 08:11:37+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 50,
    balance: 4600,
    categoryId: 'Borrowed',
    date: '2024-02-28 08:01:10+00',
    description: null,
    relatedUserId: 'user2',
    type: 'credit',
    userId: '',
  },
  {
    amount: 15,
    balance: 4210,
    categoryId: 'Food',
    date: '2024-02-25 16:42:24.489+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 5000,
    balance: 10000,
    categoryId: 'Salary',
    date: '2024-02-01 07:23:37+00',
    description: null,
    relatedUserId: null,
    type: 'credit',
    userId: '',
  },
  {
    amount: 12,
    balance: 5350,
    categoryId: 'Food',
    date: '2024-02-07 07:49:24+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 35,
    balance: 4175,
    categoryId: 'Restaurant',
    date: '2024-02-26 16:48:33+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 200,
    balance: 5562,
    categoryId: 'Rent',
    date: '2024-02-08 07:43:55+00',
    description: null,
    relatedUserId: 'user2',
    type: 'credit',
    userId: '',
  },
  {
    amount: 18,
    balance: 5309,
    categoryId: 'Food',
    date: '2024-02-02 07:41:49+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
  {
    amount: 32,
    balance: 4831,
    categoryId: 'Food',
    date: '2024-02-16 07:55:36+00',
    description: null,
    relatedUserId: null,
    type: 'debit',
    userId: '',
  },
];

async function main() {
  const user = await prisma.user.create({
    data: {
      ...dummyUser,
      password: cryptPassword('Demo@123'),
    },
  });

  const user1 = await prisma.user.create({
    data: {
      email: 'prakash_saran+1@yopmail.com',
      firstName: 'John',
      lastName: 'Doe',
      currency: 'INR',
      password: cryptPassword('Demo@123'),
    },
  });

  const user2 = await prisma.user.create({
    data: {
      countryCode: '+91',
      phone: '9876543210',
      currency: 'INR',
    },
  });

  await prisma.userRelations.createMany({
    data: [
      { userId: user.id, invitedUserId: user2.id },
      { userId: user1.id, invitedUserId: user.id },
    ],
  });

  await prisma.category.createMany({
    data: [
      ...[
        ...expenseList.map((exp) => ({
          userId: null,
          name: exp,
          type: 'debit' as any,
        })),
        {
          name: 'Netflix Subscription',
          userId: user.id,
          type: 'debit' as any,
        },
        {
          name: 'LinkedIn Premium',
          userId: user.id,
          type: 'debit' as any,
        },
      ],
      ...incomeList.map((exp) => ({ userId: null, name: exp, type: 'credit' })),
    ],
  });

  const savedCategories = await prisma.category.findMany({
    where: {
      OR: [{ userId: null }, { userId: user.id }],
    },
  });

  await prisma.transaction.createMany({
    data: transactions.map((el) => ({
      amount: el.amount,
      balance: el.balance,
      categoryId: savedCategories.find((c) => c.name === el.categoryId)?.id,
      date: new Date(el.date),
      description: el.description,
      relatedUserId:
        el.relatedUserId === 'user1'
          ? user1.id
          : el.relatedUserId === 'user2'
          ? user2.id
          : null,
      type: el.type as any,
      userId: user.id,
      accountId: null,
    })),
  });
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error(e);
    await prisma.$disconnect();
    process.exit(1);
  });
